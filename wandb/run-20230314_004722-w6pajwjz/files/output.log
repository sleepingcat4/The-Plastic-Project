YOLOv5 temporarily requires wandb version 0.12.10 or below. Some features may not work as expected.
Overriding model.yaml nc=80 with nc=13
                 from  n    params  module                                  arguments
  0                -1  1      3520  models.common.Conv                      [3, 32, 6, 2, 2]
  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]
  2                -1  1     18816  models.common.C3                        [64, 64, 1]
  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]
  4                -1  2    115712  models.common.C3                        [128, 128, 2]
  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]
  6                -1  3    625152  models.common.C3                        [256, 256, 3]
  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]
  8                -1  1   1182720  models.common.C3                        [512, 512, 1]
  9                -1  1    656896  models.common.SPPF                      [512, 512, 5]
 10                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]
 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 12           [-1, 6]  1         0  models.common.Concat                    [1]
 13                -1  1    361984  models.common.C3                        [512, 256, 1, False]
 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]
 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 16           [-1, 4]  1         0  models.common.Concat                    [1]
 17                -1  1     90880  models.common.C3                        [256, 128, 1, False]
 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]
 19          [-1, 14]  1         0  models.common.Concat                    [1]
 20                -1  1    296448  models.common.C3                        [256, 256, 1, False]
 21                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]
 22          [-1, 10]  1         0  models.common.Concat                    [1]
 23                -1  1   1182720  models.common.C3                        [512, 512, 1, False]
 24      [17, 20, 23]  1     48546  models.yolo.Detect                      [13, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]
Model summary: 270 layers, 7054690 parameters, 7054690 gradients, 16.0 GFLOPs
Transferred 343/349 items from yolov5s.pt
[34m[1mAMP: [39m[22mchecks passed
Scaled weight_decay = 0.00046875
[34m[1moptimizer:[39m[22m SGD with parameter groups 57 weight (no decay), 60 weight, 60 bias
[34m[1mtrain: [39m[22mScanning 'C:\Users\horizon\OneDrive\Documents\important\projects\thePlasticProject\The-Plastic-Project\yolov5\..
[34m[1mtrain: [39m[22mNew cache created: C:\Users\horizon\OneDrive\Documents\important\projects\thePlasticProject\The-Plastic-Project\yolov5\..\synthetic-data-v1\train\labels.cache
[34m[1mval: [39m[22mScanning 'C:\Users\horizon\OneDrive\Documents\important\projects\thePlasticProject\The-Plastic-Project\yolov5\..\s
[34m[1mval: [39m[22mNew cache created: C:\Users\horizon\OneDrive\Documents\important\projects\thePlasticProject\The-Plastic-Project\yolov5\..\synthetic-data-v1\valid\labels.cache
Plotting labels to yolov5\runs\train\exp2\labels.jpg...
[34m[1mAutoAnchor: [39m[22m4.25 anchors/target, 0.974 Best Possible Recall (BPR). Anchors are a poor fit to dataset , attempting to improve...
[34m[1mAutoAnchor: [39m[22mWARNING: Extremely small objects found: 145 of 21754 labels are < 3 pixels in size
[34m[1mAutoAnchor: [39m[22mRunning kmeans for 9 anchors on 21754 points...
[34m[1mAutoAnchor: [39m[22mEvolving anchors with Genetic Algorithm: fitness = 0.7454: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 1000/1000 [00:02<00:00, 374.82i
[34m[1mAutoAnchor: [39m[22mthr=0.25: 0.9696 best possible recall, 7.08 anchors past thr
[34m[1mAutoAnchor: [39m[22mn=9, img_size=1056, metric_all=0.436/0.749-mean/best, past_thr=0.511-mean: 110,49, 48,119, 93,95, 146,107, 134,155, 233,98, 183,254, 267,207, 359,348
[34m[1mAutoAnchor: [39m[22mDone  (original anchors better than new anchors, proceeding with original anchors)
Image sizes 1056 train, 1056 val
Using 8 dataloader workers
Logging results to [1myolov5\runs\train\exp2
Starting training for 5000 epochs...
     Epoch   gpu_mem       box       obj       cls    labels  img_size
  0%|          | 0/404 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "yolov5\train.py", line 625, in <module>
    main(opt)
  File "yolov5\train.py", line 520, in main
    train(opt.hyp, opt, device, callbacks)
  File "yolov5\train.py", line 285, in train
    imgs = imgs.to(device, non_blocking=True).float() / 255  # uint8 to float32, 0-255 to 0.0-1.0
RuntimeError: CUDA out of memory. Tried to allocate 154.00 MiB (GPU 0; 11.00 GiB total capacity; 93.04 MiB already allocated; 9.29 GiB free; 110.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF